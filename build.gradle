plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}



group = 'me.bright'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'OnARandomBox'
        url = 'https://repo.onarandombox.com/content/groups/public/'
    }
    maven { url = uri("https://maven.enginehub.org/repo/") }
    mavenCentral()
    mavenLocal()

}

apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'
    //   compileOnly 'com.onarandombox.multiversecore:Multiverse-Core:4.3.2-SNAPSHOT'
    shadow('commons-io:commons-io:2.6')
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.2.9'

//    compileOnly('com.lkeehl:tagapi:1.2.3')
   // compileOnly('com.sk89q.worldedit:7.2')
    compileOnly 'org.spigotmc:spigot:1.16.5-R0.1-SNAPSHOT'
    compileOnly files('C:\\Users\\fonar\\OneDrive\\Рабочий стол\\servers\\BungeeServer\\Game\\plugins\\SkyLib-1.0-SNAPSHOT.jar')
  //  compileOnly files('C:\\Users\\fonar\\OneDrive\\Рабочий стол\\servers\\BungeeServer\\Game\\plugins\\worldedit-bukkit-7.2.13.jar-1.0-SNAPSHOT.jar')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

shadowJar {
    destinationDirectory = file('C:\\Users\\fonar\\OneDrive\\Рабочий стол\\servers\\BungeeServer\\Game\\plugins')
    configurations = [project.configurations.shadow]
    archiveClassifier.set('')
}


processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
